{"version":3,"file":"static/js/145.39d28972.chunk.js","mappings":"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","sources":["webpack://test_for_your_company.loc/./src/components/PalettePage/PalettePage.module.scss?1cd6","redux/palette-reducer/palette-selectors.ts","components/PalettePage/ButtonColor/ButtonDelete/ButtonDelete.tsx","components/PalettePage/ButtonColor/ButtonColor.tsx","../node_modules/react-colorful/src/hooks/useEventCallback.ts","../node_modules/react-colorful/src/utils/clamp.ts","../node_modules/react-colorful/src/components/common/Interactive.tsx","../node_modules/react-colorful/src/utils/format.ts","../node_modules/react-colorful/src/components/common/Pointer.tsx","../node_modules/react-colorful/src/utils/round.ts","../node_modules/react-colorful/src/utils/convert.ts","../node_modules/react-colorful/src/components/common/Hue.tsx","../node_modules/react-colorful/src/components/common/Saturation.tsx","../node_modules/react-colorful/src/utils/compare.ts","../node_modules/react-colorful/src/hooks/useColorManipulation.ts","../node_modules/react-colorful/src/utils/nonce.ts","../node_modules/react-colorful/src/hooks/useIsomorphicLayoutEffect.ts","../node_modules/react-colorful/src/hooks/useStyleSheet.ts","../node_modules/react-colorful/src/components/common/ColorPicker.tsx","../node_modules/react-colorful/src/components/HexColorPicker.tsx","components/PalettePage/ColorPickerModal/ColorPickerModal.tsx","components/PalettePage/PalettePage.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"colorPicsBlock\":\"PalettePage_colorPicsBlock__tdGXg\",\"btnsBlock__addColor\":\"PalettePage_btnsBlock__addColor__n22z9\",\"btnColorBlock\":\"PalettePage_btnColorBlock__kkjO7\",\"btnPicker\":\"PalettePage_btnPicker__Ybrq4\",\"btnDelete\":\"PalettePage_btnDelete__r2nkU\",\"modalPicker\":\"PalettePage_modalPicker__p72cM\"};","import {createSelector} from 'reselect';\r\nimport {AppStateType} from \"../store\";\r\n\r\nconst getShowModalSelector = (state:AppStateType) => state.palettePage.showModal;\r\nexport const getShowModal = createSelector(getShowModalSelector, (showModal) => showModal);\r\n\r\nconst getColorsSelector = (state:AppStateType) => state.palettePage.colors;\r\nexport const getColors = createSelector(getColorsSelector, (colors) => colors);\r\n\r\nconst getOneColorSelector = (state:AppStateType, id: number | null) => {\r\n\treturn state.palettePage.colors.find((item) => item.id === id);\r\n};\r\nexport const getOneColor = createSelector(getOneColorSelector, (color) => color?.colorValue);","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport styles from \"../../PalettePage.module.scss\";\r\nimport {actions} from \"../../../../redux/palette-reducer/palette-reducer\";\r\n\r\n\r\ntype PropsType = {\r\n\tid:number,\r\n};\r\n\r\nexport const ButtonDelete:React.FC<PropsType> = ({id}) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst onDeletePicker = () => {\r\n\t\tdispatch( actions.deleteColorPickerPallete(id) );\r\n\t};\r\n\r\n\r\n\treturn <button onClick={onDeletePicker} className={styles.btnDelete}></button>\r\n}","import React, {useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport styles from \"../PalettePage.module.scss\";\r\n\r\nimport {getOneColor} from \"../../../redux/palette-reducer/palette-selectors\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\nimport {ButtonDelete} from \"./ButtonDelete/ButtonDelete\";\r\n\r\n\r\ntype PropsType = {\r\n\tid:number,\r\n\tshowModalChangeColor: (id: number | null) => void,\r\n};\r\n\r\nexport const ButtonColor:React.FC<PropsType> = ({id, showModalChangeColor}) => {\r\n\r\n\tconst [showDelete, setShowDelete] = useState(false);\r\n\r\n\tconst color = useSelector( (state:AppStateType) => getOneColor(state, id) );\r\n\r\n\r\n\treturn <div className={styles.btnColorBlock}\r\n\t\t\t\t\t\t\tonMouseOver={ () => setShowDelete(true) }\r\n\t\t\t\t\t\t\tonMouseOut={ () => setShowDelete(false) } >\r\n\r\n\t\t{ showDelete && <ButtonDelete id={id}/> }\r\n\r\n\t\t<button style={{backgroundColor: color}}\r\n\t\t\t\t\t\tonClick={ () => showModalChangeColor(id) }\r\n\t\t\t\t\t\tclassName={styles.btnPicker}></button>\r\n\r\n\t</div>\r\n}","import { useRef } from \"react\";\n\n// Saves incoming handler to the ref in order to avoid \"useCallback hell\"\nexport function useEventCallback<T>(handler?: (value: T) => void): (value: T) => void {\n  const callbackRef = useRef(handler);\n  const fn = useRef((value: T) => {\n    callbackRef.current && callbackRef.current(value);\n  });\n  callbackRef.current = handler;\n\n  return fn.current;\n}\n","// Clamps a value between an upper and lower bound.\n// We use ternary operators because it makes the minified code\n// 2 times shorter then `Math.min(Math.max(a,b),c)`\nexport const clamp = (number: number, min = 0, max = 1): number => {\n  return number > max ? max : number < min ? min : number;\n};\n","import React, { useRef, useMemo, useEffect } from \"react\";\n\nimport { useEventCallback } from \"../../hooks/useEventCallback\";\nimport { clamp } from \"../../utils/clamp\";\n\nexport interface Interaction {\n  left: number;\n  top: number;\n}\n\n// Check if an event was triggered by touch\nconst isTouch = (event: MouseEvent | TouchEvent): event is TouchEvent => \"touches\" in event;\n\n// Finds a proper touch point by its identifier\nconst getTouchPoint = (touches: TouchList, touchId: null | number): Touch => {\n  for (let i = 0; i < touches.length; i++) {\n    if (touches[i].identifier === touchId) return touches[i];\n  }\n  return touches[0];\n};\n\n// Finds the proper window object to fix iframe embedding issues\nconst getParentWindow = (node?: HTMLDivElement | null): Window => {\n  return (node && node.ownerDocument.defaultView) || self;\n};\n\n// Returns a relative position of the pointer inside the node's bounding box\nconst getRelativePosition = (\n  node: HTMLDivElement,\n  event: MouseEvent | TouchEvent,\n  touchId: null | number\n): Interaction => {\n  const rect = node.getBoundingClientRect();\n\n  // Get user's pointer position from `touches` array if it's a `TouchEvent`\n  const pointer = isTouch(event) ? getTouchPoint(event.touches, touchId) : (event as MouseEvent);\n\n  return {\n    left: clamp((pointer.pageX - (rect.left + getParentWindow(node).pageXOffset)) / rect.width),\n    top: clamp((pointer.pageY - (rect.top + getParentWindow(node).pageYOffset)) / rect.height),\n  };\n};\n\n// Browsers introduced an intervention, making touch events passive by default.\n// This workaround removes `preventDefault` call from the touch handlers.\n// https://github.com/facebook/react/issues/19651\nconst preventDefaultMove = (event: MouseEvent | TouchEvent): void => {\n  !isTouch(event) && event.preventDefault();\n};\n\n// Prevent mobile browsers from handling mouse events (conflicting with touch ones).\n// If we detected a touch interaction before, we prefer reacting to touch events only.\nconst isInvalid = (event: MouseEvent | TouchEvent, hasTouch: boolean): boolean => {\n  return hasTouch && !isTouch(event);\n};\n\ninterface Props {\n  onMove: (interaction: Interaction) => void;\n  onKey: (offset: Interaction) => void;\n  children: React.ReactNode;\n}\n\nconst InteractiveBase = ({ onMove, onKey, ...rest }: Props) => {\n  const container = useRef<HTMLDivElement>(null);\n  const onMoveCallback = useEventCallback<Interaction>(onMove);\n  const onKeyCallback = useEventCallback<Interaction>(onKey);\n  const touchId = useRef<null | number>(null);\n  const hasTouch = useRef(false);\n\n  const [handleMoveStart, handleKeyDown, toggleDocumentEvents] = useMemo(() => {\n    const handleMoveStart = ({ nativeEvent }: React.MouseEvent | React.TouchEvent) => {\n      const el = container.current;\n      if (!el) return;\n\n      // Prevent text selection\n      preventDefaultMove(nativeEvent);\n\n      if (isInvalid(nativeEvent, hasTouch.current) || !el) return;\n\n      if (isTouch(nativeEvent)) {\n        hasTouch.current = true;\n        const changedTouches = nativeEvent.changedTouches || [];\n        if (changedTouches.length) touchId.current = changedTouches[0].identifier;\n      }\n\n      el.focus();\n      onMoveCallback(getRelativePosition(el, nativeEvent, touchId.current));\n      toggleDocumentEvents(true);\n    };\n\n    const handleMove = (event: MouseEvent | TouchEvent) => {\n      // Prevent text selection\n      preventDefaultMove(event);\n\n      // If user moves the pointer outside of the window or iframe bounds and release it there,\n      // `mouseup`/`touchend` won't be fired. In order to stop the picker from following the cursor\n      // after the user has moved the mouse/finger back to the document, we check `event.buttons`\n      // and `event.touches`. It allows us to detect that the user is just moving his pointer\n      // without pressing it down\n      const isDown = isTouch(event) ? event.touches.length > 0 : event.buttons > 0;\n\n      if (isDown && container.current) {\n        onMoveCallback(getRelativePosition(container.current, event, touchId.current));\n      } else {\n        toggleDocumentEvents(false);\n      }\n    };\n\n    const handleMoveEnd = () => toggleDocumentEvents(false);\n\n    const handleKeyDown = (event: React.KeyboardEvent) => {\n      const keyCode = event.which || event.keyCode;\n\n      // Ignore all keys except arrow ones\n      if (keyCode < 37 || keyCode > 40) return;\n      // Do not scroll page by arrow keys when document is focused on the element\n      event.preventDefault();\n      // Send relative offset to the parent component.\n      // We use codes (37←, 38↑, 39→, 40↓) instead of keys ('ArrowRight', 'ArrowDown', etc)\n      // to reduce the size of the library\n      onKeyCallback({\n        left: keyCode === 39 ? 0.05 : keyCode === 37 ? -0.05 : 0,\n        top: keyCode === 40 ? 0.05 : keyCode === 38 ? -0.05 : 0,\n      });\n    };\n\n    function toggleDocumentEvents(state?: boolean) {\n      const touch = hasTouch.current;\n      const el = container.current;\n      const parentWindow = getParentWindow(el);\n\n      // Add or remove additional pointer event listeners\n      const toggleEvent = state ? parentWindow.addEventListener : parentWindow.removeEventListener;\n      toggleEvent(touch ? \"touchmove\" : \"mousemove\", handleMove);\n      toggleEvent(touch ? \"touchend\" : \"mouseup\", handleMoveEnd);\n    }\n\n    return [handleMoveStart, handleKeyDown, toggleDocumentEvents];\n  }, [onKeyCallback, onMoveCallback]);\n\n  // Remove window event listeners before unmounting\n  useEffect(() => toggleDocumentEvents, [toggleDocumentEvents]);\n\n  return (\n    <div\n      {...rest}\n      onTouchStart={handleMoveStart}\n      onMouseDown={handleMoveStart}\n      className=\"react-colorful__interactive\"\n      ref={container}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"slider\"\n    />\n  );\n};\n\nexport const Interactive = React.memo(InteractiveBase);\n","export const formatClassName = (names: unknown[]): string => names.filter(Boolean).join(\" \");\n","import React from \"react\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props {\n  className?: string;\n  top?: number;\n  left: number;\n  color: string;\n}\n\nexport const Pointer = ({ className, color, left, top = 0.5 }: Props): JSX.Element => {\n  const nodeClassName = formatClassName([\"react-colorful__pointer\", className]);\n\n  const style = {\n    top: `${top * 100}%`,\n    left: `${left * 100}%`,\n  };\n\n  return (\n    <div className={nodeClassName} style={style}>\n      <div className=\"react-colorful__pointer-fill\" style={{ backgroundColor: color }} />\n    </div>\n  );\n};\n","export const round = (number: number, digits = 0, base = Math.pow(10, digits)): number => {\n  return Math.round(base * number) / base;\n};\n","import { round } from \"./round\";\nimport { RgbaColor, RgbColor, HslaColor, HslColor, HsvaColor, HsvColor } from \"../types\";\n\n/**\n * Valid CSS <angle> units.\n * https://developer.mozilla.org/en-US/docs/Web/CSS/angle\n */\nconst angleUnits: Record<string, number> = {\n  grad: 360 / 400,\n  turn: 360,\n  rad: 360 / (Math.PI * 2),\n};\n\nexport const hexToHsva = (hex: string): HsvaColor => rgbaToHsva(hexToRgba(hex));\n\nexport const hexToRgba = (hex: string): RgbaColor => {\n  if (hex[0] === \"#\") hex = hex.substring(1);\n\n  if (hex.length < 6) {\n    return {\n      r: parseInt(hex[0] + hex[0], 16),\n      g: parseInt(hex[1] + hex[1], 16),\n      b: parseInt(hex[2] + hex[2], 16),\n      a: hex.length === 4 ? round(parseInt(hex[3] + hex[3], 16) / 255, 2) : 1,\n    };\n  }\n\n  return {\n    r: parseInt(hex.substring(0, 2), 16),\n    g: parseInt(hex.substring(2, 4), 16),\n    b: parseInt(hex.substring(4, 6), 16),\n    a: hex.length === 8 ? round(parseInt(hex.substring(6, 8), 16) / 255, 2) : 1,\n  };\n};\n\nexport const parseHue = (value: string, unit = \"deg\"): number => {\n  return Number(value) * (angleUnits[unit] || 1);\n};\n\nexport const hslaStringToHsva = (hslString: string): HsvaColor => {\n  const matcher = /hsla?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hslString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return hslaToHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    l: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hslStringToHsva = hslaStringToHsva;\n\nexport const hslaToHsva = ({ h, s, l, a }: HslaColor): HsvaColor => {\n  s *= (l < 50 ? l : 100 - l) / 100;\n\n  return {\n    h: h,\n    s: s > 0 ? ((2 * s) / (l + s)) * 100 : 0,\n    v: l + s,\n    a,\n  };\n};\n\nexport const hsvaToHex = (hsva: HsvaColor): string => rgbaToHex(hsvaToRgba(hsva));\n\nexport const hsvaToHsla = ({ h, s, v, a }: HsvaColor): HslaColor => {\n  const hh = ((200 - s) * v) / 100;\n\n  return {\n    h: round(h),\n    s: round(hh > 0 && hh < 200 ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0),\n    l: round(hh / 2),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToHslString = (hsva: HsvaColor): string => {\n  const { h, s, l } = hsvaToHsla(hsva);\n  return `hsl(${h}, ${s}%, ${l}%)`;\n};\n\nexport const hsvaToHsvString = (hsva: HsvaColor): string => {\n  const { h, s, v } = roundHsva(hsva);\n  return `hsv(${h}, ${s}%, ${v}%)`;\n};\n\nexport const hsvaToHsvaString = (hsva: HsvaColor): string => {\n  const { h, s, v, a } = roundHsva(hsva);\n  return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n};\n\nexport const hsvaToHslaString = (hsva: HsvaColor): string => {\n  const { h, s, l, a } = hsvaToHsla(hsva);\n  return `hsla(${h}, ${s}%, ${l}%, ${a})`;\n};\n\nexport const hsvaToRgba = ({ h, s, v, a }: HsvaColor): RgbaColor => {\n  h = (h / 360) * 6;\n  s = s / 100;\n  v = v / 100;\n\n  const hh = Math.floor(h),\n    b = v * (1 - s),\n    c = v * (1 - (h - hh) * s),\n    d = v * (1 - (1 - h + hh) * s),\n    module = hh % 6;\n\n  return {\n    r: round([v, c, b, b, d, v][module] * 255),\n    g: round([d, v, v, c, b, b][module] * 255),\n    b: round([b, b, d, v, v, c][module] * 255),\n    a: round(a, 2),\n  };\n};\n\nexport const hsvaToRgbString = (hsva: HsvaColor): string => {\n  const { r, g, b } = hsvaToRgba(hsva);\n  return `rgb(${r}, ${g}, ${b})`;\n};\n\nexport const hsvaToRgbaString = (hsva: HsvaColor): string => {\n  const { r, g, b, a } = hsvaToRgba(hsva);\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n};\n\nexport const hsvaStringToHsva = (hsvString: string): HsvaColor => {\n  const matcher = /hsva?\\(?\\s*(-?\\d*\\.?\\d+)(deg|rad|grad|turn)?[,\\s]+(-?\\d*\\.?\\d+)%?[,\\s]+(-?\\d*\\.?\\d+)%?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(hsvString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return roundHsva({\n    h: parseHue(match[1], match[2]),\n    s: Number(match[3]),\n    v: Number(match[4]),\n    a: match[5] === undefined ? 1 : Number(match[5]) / (match[6] ? 100 : 1),\n  });\n};\n\nexport const hsvStringToHsva = hsvaStringToHsva;\n\nexport const rgbaStringToHsva = (rgbaString: string): HsvaColor => {\n  const matcher = /rgba?\\(?\\s*(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?[,\\s]+(-?\\d*\\.?\\d+)(%)?,?\\s*[/\\s]*(-?\\d*\\.?\\d+)?(%)?\\s*\\)?/i;\n  const match = matcher.exec(rgbaString);\n\n  if (!match) return { h: 0, s: 0, v: 0, a: 1 };\n\n  return rgbaToHsva({\n    r: Number(match[1]) / (match[2] ? 100 / 255 : 1),\n    g: Number(match[3]) / (match[4] ? 100 / 255 : 1),\n    b: Number(match[5]) / (match[6] ? 100 / 255 : 1),\n    a: match[7] === undefined ? 1 : Number(match[7]) / (match[8] ? 100 : 1),\n  });\n};\n\nexport const rgbStringToHsva = rgbaStringToHsva;\n\nconst format = (number: number) => {\n  const hex = number.toString(16);\n  return hex.length < 2 ? \"0\" + hex : hex;\n};\n\nexport const rgbaToHex = ({ r, g, b, a }: RgbaColor): string => {\n  const alphaHex = a < 1 ? format(round(a * 255)) : \"\";\n  return \"#\" + format(r) + format(g) + format(b) + alphaHex;\n};\n\nexport const rgbaToHsva = ({ r, g, b, a }: RgbaColor): HsvaColor => {\n  const max = Math.max(r, g, b);\n  const delta = max - Math.min(r, g, b);\n\n  // prettier-ignore\n  const hh = delta\n    ? max === r\n      ? (g - b) / delta\n      : max === g\n        ? 2 + (b - r) / delta\n        : 4 + (r - g) / delta\n    : 0;\n\n  return {\n    h: round(60 * (hh < 0 ? hh + 6 : hh)),\n    s: round(max ? (delta / max) * 100 : 0),\n    v: round((max / 255) * 100),\n    a,\n  };\n};\n\nexport const roundHsva = (hsva: HsvaColor): HsvaColor => ({\n  h: round(hsva.h),\n  s: round(hsva.s),\n  v: round(hsva.v),\n  a: round(hsva.a, 2),\n});\n\nexport const rgbaToRgb = ({ r, g, b }: RgbaColor): RgbColor => ({ r, g, b });\n\nexport const hslaToHsl = ({ h, s, l }: HslaColor): HslColor => ({ h, s, l });\n\nexport const hsvaToHsv = (hsva: HsvaColor): HsvColor => {\n  const { h, s, v } = roundHsva(hsva);\n  return { h, s, v };\n};\n","import React from \"react\";\n\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\n\nimport { hsvaToHslString } from \"../../utils/convert\";\nimport { formatClassName } from \"../../utils/format\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\n\ninterface Props {\n  className?: string;\n  hue: number;\n  onChange: (newHue: { h: number }) => void;\n}\n\nconst HueBase = ({ className, hue, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({ h: 360 * interaction.left });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Hue measured in degrees of the color circle ranging from 0 to 360\n    onChange({\n      h: clamp(hue + offset.left * 360, 0, 360),\n    });\n  };\n\n  const nodeClassName = formatClassName([\"react-colorful__hue\", className]);\n\n  return (\n    <div className={nodeClassName}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Hue\"\n        aria-valuenow={round(hue)}\n        aria-valuemax=\"360\"\n        aria-valuemin=\"0\"\n      >\n        <Pointer\n          className=\"react-colorful__hue-pointer\"\n          left={hue / 360}\n          color={hsvaToHslString({ h: hue, s: 100, v: 100, a: 1 })}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Hue = React.memo(HueBase);\n","import React from \"react\";\nimport { Interactive, Interaction } from \"./Interactive\";\nimport { Pointer } from \"./Pointer\";\nimport { HsvaColor } from \"../../types\";\nimport { hsvaToHslString } from \"../../utils/convert\";\nimport { clamp } from \"../../utils/clamp\";\nimport { round } from \"../../utils/round\";\n\ninterface Props {\n  hsva: HsvaColor;\n  onChange: (newColor: { s: number; v: number }) => void;\n}\n\nconst SaturationBase = ({ hsva, onChange }: Props) => {\n  const handleMove = (interaction: Interaction) => {\n    onChange({\n      s: interaction.left * 100,\n      v: 100 - interaction.top * 100,\n    });\n  };\n\n  const handleKey = (offset: Interaction) => {\n    // Saturation and brightness always fit into [0, 100] range\n    onChange({\n      s: clamp(hsva.s + offset.left * 100, 0, 100),\n      v: clamp(hsva.v - offset.top * 100, 0, 100),\n    });\n  };\n\n  const containerStyle = {\n    backgroundColor: hsvaToHslString({ h: hsva.h, s: 100, v: 100, a: 1 }),\n  };\n\n  return (\n    <div className=\"react-colorful__saturation\" style={containerStyle}>\n      <Interactive\n        onMove={handleMove}\n        onKey={handleKey}\n        aria-label=\"Color\"\n        aria-valuetext={`Saturation ${round(hsva.s)}%, Brightness ${round(hsva.v)}%`}\n      >\n        <Pointer\n          className=\"react-colorful__saturation-pointer\"\n          top={1 - hsva.v / 100}\n          left={hsva.s / 100}\n          color={hsvaToHslString(hsva)}\n        />\n      </Interactive>\n    </div>\n  );\n};\n\nexport const Saturation = React.memo(SaturationBase);\n","import { hexToRgba } from \"./convert\";\nimport { ObjectColor } from \"../types\";\n\nexport const equalColorObjects = (first: ObjectColor, second: ObjectColor): boolean => {\n  if (first === second) return true;\n\n  for (const prop in first) {\n    // The following allows for a type-safe calling of this function (first & second have to be HSL, HSV, or RGB)\n    // with type-unsafe iterating over object keys. TS does not allow this without an index (`[key: string]: number`)\n    // on an object to define how iteration is normally done. To ensure extra keys are not allowed on our types,\n    // we must cast our object to unknown (as RGB demands `r` be a key, while `Record<string, x>` does not care if\n    // there is or not), and then as a type TS can iterate over.\n    if (\n      ((first as unknown) as Record<string, number>)[prop] !==\n      ((second as unknown) as Record<string, number>)[prop]\n    )\n      return false;\n  }\n\n  return true;\n};\n\nexport const equalColorString = (first: string, second: string): boolean => {\n  return first.replace(/\\s/g, \"\") === second.replace(/\\s/g, \"\");\n};\n\nexport const equalHex = (first: string, second: string): boolean => {\n  if (first.toLowerCase() === second.toLowerCase()) return true;\n\n  // To compare colors like `#FFF` and `ffffff` we convert them into RGB objects\n  return equalColorObjects(hexToRgba(first), hexToRgba(second));\n};\n","import { useState, useEffect, useCallback, useRef } from \"react\";\nimport { ColorModel, AnyColor, HsvaColor } from \"../types\";\nimport { equalColorObjects } from \"../utils/compare\";\nimport { useEventCallback } from \"./useEventCallback\";\n\nexport function useColorManipulation<T extends AnyColor>(\n  colorModel: ColorModel<T>,\n  color: T,\n  onChange?: (color: T) => void\n): [HsvaColor, (color: Partial<HsvaColor>) => void] {\n  // Save onChange callback in the ref for avoiding \"useCallback hell\"\n  const onChangeCallback = useEventCallback<T>(onChange);\n\n  // No matter which color model is used (HEX, RGB(A) or HSL(A)),\n  // all internal calculations are based on HSVA model\n  const [hsva, updateHsva] = useState<HsvaColor>(() => colorModel.toHsva(color));\n\n  // By using this ref we're able to prevent extra updates\n  // and the effects recursion during the color conversion\n  const cache = useRef({ color, hsva });\n\n  // Update local HSVA-value if `color` property value is changed,\n  // but only if that's not the same color that we just sent to the parent\n  useEffect(() => {\n    if (!colorModel.equal(color, cache.current.color)) {\n      const newHsva = colorModel.toHsva(color);\n      cache.current = { hsva: newHsva, color };\n      updateHsva(newHsva);\n    }\n  }, [color, colorModel]);\n\n  // Trigger `onChange` callback only if an updated color is different from cached one;\n  // save the new color to the ref to prevent unnecessary updates\n  useEffect(() => {\n    let newColor;\n    if (\n      !equalColorObjects(hsva, cache.current.hsva) &&\n      !colorModel.equal((newColor = colorModel.fromHsva(hsva)), cache.current.color)\n    ) {\n      cache.current = { hsva, color: newColor };\n      onChangeCallback(newColor);\n    }\n  }, [hsva, colorModel, onChangeCallback]);\n\n  // Merge the current HSVA color object with updated params.\n  // For example, when a child component sends `h` or `s` only\n  const handleChange = useCallback((params: Partial<HsvaColor>) => {\n    updateHsva((current) => Object.assign({}, current, params));\n  }, []);\n\n  return [hsva, handleChange];\n}\n","declare const __webpack_nonce__: string | undefined;\nlet nonce: string | undefined;\n\n/**\n * Returns a nonce hash included by Webpack or the one defined manually by developer.\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n * https://webpack.js.org/guides/csp/\n */\nexport const getNonce = (): string | undefined => {\n  if (nonce) return nonce;\n  if (typeof __webpack_nonce__ !== \"undefined\") return __webpack_nonce__;\n  return undefined;\n};\n\n/**\n * Signs the style tag with a base64-encoded string (nonce) to conforms to Content Security Policies.\n * This function has to be invoked before any picker is rendered if you aren't using Webpack for CSP.\n */\nexport const setNonce = (hash: string): void => {\n  nonce = hash;\n};\n","import { useLayoutEffect, useEffect } from \"react\";\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\nexport const useIsomorphicLayoutEffect =\n  typeof window !== \"undefined\" ? useLayoutEffect : useEffect;\n","import { RefObject } from \"react\";\n\nimport { useIsomorphicLayoutEffect } from \"./useIsomorphicLayoutEffect\";\nimport { getNonce } from \"../utils/nonce\";\n\n// Bundler is configured to load this as a processed minified CSS-string\nimport styles from \"../css/styles.css\";\n\nconst styleElementMap: Map<Document, HTMLStyleElement> = new Map();\n\n/**\n * Injects CSS code into the document's <head>\n */\nexport const useStyleSheet = (nodeRef: RefObject<HTMLDivElement>): void => {\n  useIsomorphicLayoutEffect(() => {\n    const parentDocument = nodeRef.current ? nodeRef.current.ownerDocument : document;\n\n    if (typeof parentDocument !== \"undefined\" && !styleElementMap.has(parentDocument)) {\n      const styleElement = parentDocument.createElement(\"style\");\n      styleElement.innerHTML = styles;\n      styleElementMap.set(parentDocument, styleElement);\n\n      // Conform to CSP rules by setting `nonce` attribute to the inline styles\n      const nonce = getNonce();\n      if (nonce) styleElement.setAttribute(\"nonce\", nonce);\n\n      parentDocument.head.appendChild(styleElement);\n    }\n  }, []);\n};\n","import React, { useRef } from \"react\";\n\nimport { Hue } from \"./Hue\";\nimport { Saturation } from \"./Saturation\";\n\nimport { ColorModel, ColorPickerBaseProps, AnyColor } from \"../../types\";\nimport { useColorManipulation } from \"../../hooks/useColorManipulation\";\nimport { useStyleSheet } from \"../../hooks/useStyleSheet\";\nimport { formatClassName } from \"../../utils/format\";\n\ninterface Props<T extends AnyColor> extends Partial<ColorPickerBaseProps<T>> {\n  colorModel: ColorModel<T>;\n}\n\nexport const ColorPicker = <T extends AnyColor>({\n  className,\n  colorModel,\n  color = colorModel.defaultColor,\n  onChange,\n  ...rest\n}: Props<T>): JSX.Element => {\n  const nodeRef = useRef<HTMLDivElement>(null);\n  useStyleSheet(nodeRef);\n\n  const [hsva, updateHsva] = useColorManipulation<T>(colorModel, color, onChange);\n\n  const nodeClassName = formatClassName([\"react-colorful\", className]);\n\n  return (\n    <div {...rest} ref={nodeRef} className={nodeClassName}>\n      <Saturation hsva={hsva} onChange={updateHsva} />\n      <Hue hue={hsva.h} onChange={updateHsva} className=\"react-colorful__last-control\" />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { ColorPicker } from \"./common/ColorPicker\";\nimport { ColorModel, ColorPickerBaseProps } from \"../types\";\nimport { equalHex } from \"../utils/compare\";\nimport { hexToHsva, hsvaToHex } from \"../utils/convert\";\n\nconst colorModel: ColorModel<string> = {\n  defaultColor: \"000\",\n  toHsva: hexToHsva,\n  fromHsva: ({ h, s, v }) => hsvaToHex({ h, s, v, a: 1 }),\n  equal: equalHex,\n};\n\nexport const HexColorPicker = (props: Partial<ColorPickerBaseProps<string>>): JSX.Element => (\n  <ColorPicker {...props} colorModel={colorModel} />\n);\n","import React, {useEffect, useRef} from \"react\";\r\nimport {HexColorPicker} from \"react-colorful\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getOneColor, getShowModal} from \"../../../redux/palette-reducer/palette-selectors\";\r\nimport {actions} from \"../../../redux/palette-reducer/palette-reducer\";\r\nimport styles from \"./../PalettePage.module.scss\";\r\nimport {AppStateType} from \"../../../redux/store\";\r\n\r\ntype PropsType = {\r\n\tshowModalChangeColor: (id: number | null) => void,\r\n\tcolorPicsBlockRef: any\r\n};\r\n\r\nexport const ColorPickerModal:React.FC<PropsType> = ({showModalChangeColor, colorPicsBlockRef}) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst showModal = useSelector( getShowModal );\r\n\r\n\tconst color = useSelector( (state:AppStateType) => getOneColor(state, showModal) );\r\n\r\n\tconst rootEl:any = useRef(null);\r\n\r\n\tconst onCloseColorPickerModal = (evt:any) => {\r\n\t\tif (!showModal) return;\r\n\r\n\t\tif (!rootEl.current.contains(evt.target) && !colorPicsBlockRef.current.contains(evt.target)) {\r\n\t\t\tshowModalChangeColor(null);\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tdocument.addEventListener('click', onCloseColorPickerModal);\r\n\t\treturn () => document.removeEventListener('click', onCloseColorPickerModal);\r\n\t}, [showModal]);\r\n\r\n\tconst setColor = (evt:any) => {\r\n\t\tdispatch( actions.setColorPickerPallete(showModal, evt) );\r\n\t};\r\n\r\n\treturn !showModal ? null : <div className={styles.modalPicker} ref={rootEl}>\r\n\t\t<HexColorPicker color={color} onChange={setColor} />;\r\n\t</div>\r\n};","import React, {useRef} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport styles from \"./PalettePage.module.scss\";\r\n\r\nimport {getColors} from \"../../redux/palette-reducer/palette-selectors\";\r\nimport {actions, addColorPickerPalleteThunk} from \"../../redux/palette-reducer/palette-reducer\";\r\nimport {ButtonColor} from \"./ButtonColor/ButtonColor\";\r\nimport {ColorPickerModal} from \"./ColorPickerModal/ColorPickerModal\";\r\nimport LoadingSpinner from \"../spinners/LoadingSpinner/LoadingSpinner\";\r\n\r\nexport const PalettePage:React.FC = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst colors = useSelector( getColors );\r\n\r\n\tconst colorPicsBlockRef:any = useRef<HTMLDivElement>(null);\r\n\r\n\r\n\tconst addColorPicker = () => {\r\n\t\t// @ts-ignore\r\n\t\tdispatch( addColorPickerPalleteThunk() );\r\n\t};\r\n\r\n\tconst showModalChangeColor = (id:number|null) => {\r\n\t\tdispatch( actions.setShowModalColorPicker(id) );\r\n\t};\r\n\r\n\treturn <section ref={colorPicsBlockRef}>\r\n\t\t<ColorPickerModal showModalChangeColor={showModalChangeColor} colorPicsBlockRef={colorPicsBlockRef} />\r\n\t\t<div className={styles.colorPicsBlock} >\r\n\r\n\t\t\t{\r\n\t\t\t\tcolors ?\r\n\t\t\t\t\tcolors.map((color) => (\r\n\t\t\t\t\t\t<ButtonColor key={color.id} id={color.id} showModalChangeColor={showModalChangeColor} />\r\n\t\t\t\t\t))\r\n\r\n\t\t\t\t\t:\r\n\r\n\t\t\t\t\t<LoadingSpinner />\r\n\t\t\t}\r\n\t\t</div>\r\n\r\n\t\t<div className={styles.btnsBlock}>\r\n\t\t\t<button onClick={addColorPicker} className={`btn ${styles.btnsBlock__addColor}`}>Добавить цвет</button>\r\n\t\t</div>\r\n\t</section>\r\n};\r\n\r\nexport default PalettePage;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["getShowModal","createSelector","state","palettePage","showModal","getColors","colors","getOneColor","id","find","item","color","colorValue","ButtonDelete","dispatch","useDispatch","onClick","actions","className","styles","ButtonColor","showModalChangeColor","useState","showDelete","setShowDelete","useSelector","onMouseOver","onMouseOut","style","backgroundColor","useEventCallback","handler","callbackRef","useRef","fn","value","current","clamp","number","min","max","isTouch","event","getParentWindow","node","ownerDocument","defaultView","self","getRelativePosition","touchId","rect","getBoundingClientRect","pointer","touches","i","length","identifier","left","pageX","pageXOffset","width","top","pageY","pageYOffset","height","preventDefaultMove","preventDefault","Interactive","React","onMove","onKey","rest","container","onMoveCallback","onKeyCallback","hasTouch","x","useMemo","handleMove","buttons","toggleDocumentEvents","handleMoveEnd","touch","parentWindow","toggleEvent","addEventListener","removeEventListener","nativeEvent","el","changedTouches","focus","keyCode","which","handleMoveStart","handleKeyDown","useEffect","onTouchStart","onMouseDown","ref","onKeyDown","tabIndex","role","formatClassName","names","filter","Boolean","join","Pointer","r","nodeClassName","round","digits","base","Math","pow","hexToHsva","PI","hex","rgbaToHsva","hexToRgba","substring","parseInt","g","b","a","hsvaToHex","hsva","rgbaToHex","hsvaToRgba","hsvaToHsla","e","s","v","hh","h","l","hsvaToHslString","floor","c","d","module","format","toString","alphaHex","delta","Hue","hue","onChange","interaction","offset","aria-label","aria-valuenow","aria-valuemax","aria-valuemin","Saturation","containerStyle","aria-valuetext","equalColorObjects","first","second","prop","equalHex","toLowerCase","useColorManipulation","colorModel","onChangeCallback","toHsva","updateHsva","cache","equal","newHsva","newColor","fromHsva","handleChange","useCallback","params","Object","assign","nonce","useIsomorphicLayoutEffect","window","useLayoutEffect","styleElementMap","Map","useStyleSheet","nodeRef","parentDocument","document","has","styleElement","createElement","innerHTML","set","__webpack_nonce__","setAttribute","head","appendChild","ColorPicker","t","defaultColor","HexColorPicker","props","ColorPickerModal","colorPicsBlockRef","rootEl","onCloseColorPickerModal","evt","contains","target","PalettePage","map","LoadingSpinner","addColorPickerPalleteThunk","NOT_FOUND","defaultEqualityCheck","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","createCacheKeyComparator","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","name","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","push","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}